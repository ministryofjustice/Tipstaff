@model Tipstaff.Models.SalutationListView

@{
    ViewBag.Title = "Salutation index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head
{
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" media="screen" />
    <link href="@Url.Content("~/Content/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
    <style type="text/css">
        form {display:inline;}
    </style>
}
<h6>@Html.ActionLink("Administration", "Index", "Admin") 
> @Html.ActionLink("Lookups", "Lookups", "Admin") 
> Salutations</h6>

<p>

	@Html.ImageAndTextLink(Url.Content("~/Images/add.png"), "Create new Salutation", "Create new Salutation", "Create", null, null, null, null, "createButton")

</p>

<table>
    <tr>
        <th></th>
        <th>
            @Html.LabelFor(model => model.Salutations.First().Detail)
        </th>
        <th>
            @Html.LabelFor(model => model.Salutations.First().active)
        </th>
        <th>
            @Html.LabelFor(model => model.Salutations.First().deactivated)
        </th>
        <th>
            @Html.LabelFor(model => model.Salutations.First().deactivatedBy)
        </th>
    </tr>

@{  var isAltRow = false;
	foreach (var item in Model.Salutations) {
    <tr class="@(isAltRow ? "altRow" : "")>">
        <td width="60px" style="text-align:right;">
            @Html.ImageLink(Url.Content("~/Images/edit.png"), "Edit", "Edit", "Salutation", new { id = item.salutationID }, null, null)
            @Html.ImageLink(Url.Content("~/Images/delete.png"), "Deactivate", "Deactivate", "Salutation", new { id = item.salutationID }, null, null) 
            @Html.ImageLink(Url.Content("~/Images/Audit.png"), "Audit", "Audit", "Audit", new { area = "", auditType = "Salutation", id = item.salutationID }, null, null) 
        </td>
		
        <td>
            @Html.ImageAndTextLink(Url.Content("~/Images/view.png"), item.Detail, string.Format("Details for {0}", item.Detail), "Details", "Salutation", new { id = item.salutationID }, null, null, "createButton")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.active)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.deactivated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.deactivatedBy)
        </td>
    </tr>
    isAltRow = !isAltRow;
    }
}
</table>
@{
    var token = @Html.AntiForgeryToken().ToHtmlString();

    var beginIndex = token.IndexOf("value=\"") + 7;
    var endIndex = token.IndexOf("\"", beginIndex);
    token = token.Substring(beginIndex, endIndex - beginIndex);

}
@Html.SSGPaging("Index", "Salutation", Model, Model.Salutations, token)