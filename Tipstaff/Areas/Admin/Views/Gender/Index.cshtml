@model Tipstaff.Models.GenderListView

@{
    ViewBag.Title = "Genders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head
{
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" media="screen" />
    <link href="@Url.Content("~/Content/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
    <style type="text/css">
        form {display:inline;}
    </style>
}
<h1>@ViewBag.Title</h1>
<h6>@Html.ActionLink("Administration", "Index", "Admin") 
> @Html.ActionLink("Lookups", "Lookups", "Admin") 
> Genders</h6>

<p>

	@Html.ImageAndTextLink(Url.Content("~/Images/add.png"), "Create new Gender", "Create new Gender", "Create", null, null, null, null, "createButton")

</p>

<table>
    <tr>
        <td style="background-color: #dddddd"></td>
        <th>
            @Html.LabelFor(model => model.Genders.First().detail)
        </th>
        <th>
            @Html.LabelFor(model => model.Genders.First().active)
        </th>
        <th>
            @Html.LabelFor(model=>model.Genders.First().deactivated)
        </th>
        <th>
            @Html.LabelFor(model=>model.Genders.First().deactivatedBy)
        </th>
    </tr>

@{   var isAltRow = false;
	foreach (var item in Model.Genders) {
    <tr class="@(isAltRow ? "altRow" : "")">
        <td width="60px">
            @Html.ImageLink(Url.Content("~/Images/edit.png"), "Edit", "Edit", "Gender", new { id = item.genderID }, null, null)
            @Html.ImageLink(Url.Content("~/Images/delete.png"), "Deactivate", "Deactivate", "Gender", new { id = item.genderID }, null, null) 
            @Html.ImageLink(Url.Content("~/Images/Audit.png"), "Audit", "Audit", "Audit", new { area="", auditType="Gender", id = item.genderID }, null, null) 
        </td>
		
        <td>
            @Html.ImageAndTextLink(Url.Content("~/Images/view.png"), item.detail, string.Format("Details for {0}", item.detail), "Details", "Gender", new { id = item.genderID }, null, null, "createButton")
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.active, new { title="Active", disabled="disabled"})
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.deactivated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.deactivatedBy)
        </td>
    </tr>
 	isAltRow = !isAltRow;
	}
}
</table>
@{
    var token = @Html.AntiForgeryToken().ToHtmlString();

    var beginIndex = token.IndexOf("value=\"") + 7;
    var endIndex = token.IndexOf("\"", beginIndex);
    token = token.Substring(beginIndex, endIndex - beginIndex);

}
@Html.SSGPaging("Index", "Gender", Model, Model.Genders, token)

