@model Tipstaff.Models.PoliceForceCreation

@{
    ViewBag.Title = string.Format("Add police force to record {0}", Model.TS_PoliceForce.tipstaffRecord.UniqueRecordID);
}
@{ 
    string controller = genericFunctions.TypeOfTipstaffRecord(Model.TS_PoliceForce.tipstaffRecordID);
    string display = controller == "Warrant" ? "Warrants" : "Child Abductions";
    string nameType = controller == "Warrant" ? "Contemnor" : "Respondent";
    }
<h6>@Html.ActionLink(display, "Index", controller, new { Area=""}, null)
> @Html.ActionLink(Model.TS_PoliceForce.tipstaffRecord.UniqueRecordID,"Details",controller, new {id=Model.TS_PoliceForce.tipstaffRecordID, Area=""},null)
> Add Police Force</h6>

@using (Html.BeginForm()) { 
    @Html.ValidationSummary(true) 
    @Html.AntiForgeryToken();
    <fieldset>
        <legend>Police Force Details</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.policeForceID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.policeForceID, Model.PoliceForceList, "Select a Police Force", new { @class = "required" })
            @Html.ValidationMessageFor(model => model.policeForceID)
        </div>
        @Html.HiddenFor(model => model.TS_PoliceForce.tipstaffRecordID) 
        <p>
            <input type="submit" value="Add" />
        </p>
        <div style="padding-top:10px;">Fields marked<span class="required-star">*</span> are mandatory and must be completed before the record can be saved.</div>
    </fieldset>
}