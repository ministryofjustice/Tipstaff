@model Tipstaff.Models.ContactTypeListView

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head
{
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" media="screen" />
    <link href="@Url.Content("~/Content/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
    <style type="text/css">
        form {display:inline;}
    </style>
}
<h6>@Html.ActionLink("Administration", "Index", "Admin") 
> @Html.ActionLink("Lookups", "Lookups", "Admin") 
> Contact types</h6>


<table>
    
    <tr>
        <th>
            @Html.LabelFor(model=>model.ContactTypes.First().Detail)
        </th>
        <th>
            @Html.LabelFor(model=>model.ContactTypes.First().active)
        </th>
    </tr>

@{var isAltRow = false;
	foreach (var item in Model.ContactTypes) {
    <tr class="@(isAltRow ? "altRow" : "")">
        <td>
            @Html.DisplayFor(modelItem => item.Detail)
        </td>
        <td style="text-align:center;">
            @Html.DisplayFor(modelitem=>item.active)
        </td>
    </tr>
    isAltRow = !isAltRow;
	}
}
</table>
@{
    var token = @Html.AntiForgeryToken().ToHtmlString();

    var beginIndex = token.IndexOf("value=\"") + 7;
    var endIndex = token.IndexOf("\"", beginIndex);
    token = token.Substring(beginIndex, endIndex - beginIndex);

}
@*@Html.SSGPaging("Index", "ContactType", Model, Model.ContactTypes, token)*@
