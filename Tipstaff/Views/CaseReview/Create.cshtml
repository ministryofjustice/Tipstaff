@model Tipstaff.Models.CaseReviewCreation

@{
    ViewBag.Title = "Create case review";
}
@{ 
    string controller = genericFunctions.TypeOfTipstaffRecord(Model.CaseReview.tipstaffRecordID);
    string display = controller == "Warrant" ? "Warrants" : "Child Abductions";
    string nameType = controller == "Warrant" ? "Contemnor" : "Respondent";
    }
<h6>@Html.ActionLink(display,"Index",controller)
> @Html.ActionLink(Model.CaseReview.tipstaffRecord.UniqueRecordID,"Details",controller, new{id=Model.CaseReview.tipstaffRecordID},null)
> Add case review</h6>

@using (Html.BeginForm()) { 
    @Html.ValidationSummary(false)
    @Html.AntiForgeryToken();
<fieldset>
    <legend>Case Review details</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.CaseReview.reviewDate, true)<span style="color:red;height:14px;font-size:large;padding-left:3px;">*</span>
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.CaseReview.reviewDate)
        @Html.ValidationMessageFor(model => model.CaseReview.reviewDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CaseStatusID, true)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.CaseStatusID, Model.CaseStatusList, "Select a status for the case", new { @class = "required" })
        @Html.ValidationMessageFor(model => model.CaseStatusID)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CaseReview.caseReviewStatus.CaseReviewStatusId, true)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.CaseReview.caseReviewStatus.CaseReviewStatusId, Model.CaseReviewStatusList, "Select a case review status", new { @class = "required" })
        @Html.ValidationMessageFor(model => model.CaseReview.caseReviewStatus.CaseReviewStatusId)
        (If setting file to closed, leave the default date present in @Html.LabelFor(model => model.CaseReview.nextReviewDate) )
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CaseReview.nextReviewDate, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.CaseReview.nextReviewDate)
        @Html.ValidationMessageFor(model => model.CaseReview.nextReviewDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CaseReview.actionTaken, true)
    </div>
    <div class="editor-field" style="height:100px;width:450px;">
        @Html.EditorFor(model => model.CaseReview.actionTaken)
        @Html.ValidationMessageFor(model => model.CaseReview.actionTaken)
    </div>
    @Html.HiddenFor(model => model.CaseReview.tipstaffRecordID)

    <p>
        <input type="submit" value="Create" />
    </p>
    <div style="padding-top:10px;">Fields marked<span class="required-star">*</span> are mandatory and must be completed before the record can be saved.</div>
</fieldset>
}