@model Tipstaff.Models.ChildCreationModel

@{
    ViewBag.Title = "Amend Child record";
}

<h6>@Html.ActionLink("Child Abductions", "Index", "ChildAbduction") 
> @Html.ActionLink(Model.child.childAbduction.UniqueRecordID,"Details","ChildAbduction", new{id=Model.child.childAbduction.tipstaffRecordID},null) 
> @Html.ActionLink(string.Format("(Child) {0}", Model.child.PoliceDisplayName),"Details",new{id=Model.child.childID}) 
> Edit</h6>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken();
    <fieldset>
        <legend>@ViewBag.Title</legend>

        @Html.HiddenFor(model => Model.child.childID)

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.nameLast, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.child.nameLast)
            @Html.ValidationMessageFor(model => Model.child.nameLast)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.nameFirst, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.child.nameFirst)
            @Html.ValidationMessageFor(model => Model.child.nameFirst)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.nameMiddle, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.child.nameMiddle)
            @Html.ValidationMessageFor(model => Model.child.nameMiddle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.dateOfBirth, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.dateOfBirth)
            @Html.ValidationMessageFor(model => Model.child.dateOfBirth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.gender, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => Model.child.gender.GenderId, Model.GenderList, "Please select a gender", new { @class = "required" })           
            @Html.ValidationMessageFor(model => Model.child.gender.GenderId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.height, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.height)
            @Html.ValidationMessageFor(model => Model.child.height)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.build, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.build)
            @Html.ValidationMessageFor(model => Model.child.build)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.hairColour, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.hairColour)
            @Html.ValidationMessageFor(model => Model.child.hairColour)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.eyeColour, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.eyeColour)
            @Html.ValidationMessageFor(model => Model.child.eyeColour)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.skinColour, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => Model.child.skinColour.SkinColourId, Model.SkinColourList, "Please select a skin colour", new { @class = "required" })           
            @Html.ValidationMessageFor(model => Model.child.skinColour.SkinColourId) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.specialfeatures, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => Model.child.specialfeatures)
            @Html.ValidationMessageFor(model => Model.child.specialfeatures)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.country, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => Model.child.country.CountryID, Model.CountryList, "Select a country", new { @class = "required" })            
            @Html.ValidationMessageFor(model => Model.child.country.CountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.nationality.NationalityID, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => Model.child.nationality.NationalityID, Model.NationalityList, "Select a Nationality", new { @class = "required" })            
            @Html.ValidationMessageFor(model => Model.child.nationality.NationalityID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => Model.child.PNCID, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => Model.child.PNCID)
            @Html.ValidationMessageFor(model => Model.child.PNCID)
        </div>

        @Html.HiddenFor(model => Model.child.tipstaffRecordID)

        <p>
            <input type="submit" value="Save" />
        </p>
        <div>Fields marked<span class="required-star">*</span> are mandatory and must be completed before the record can be saved.</div>
    </fieldset>
}