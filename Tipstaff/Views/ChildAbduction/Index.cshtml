@model Tipstaff.Models.ChildAbductionListViewModel
@{
    ViewBag.Title = "Child Abductions Index";
}
@section head
{
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" media="screen" />
    <link href="@Url.Content("~/Content/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
    <style type="text/css">
        form {display:inline;}
    </style>
}
<h6>Child Abductions</h6>
<table>
    <tr>@*Filter Row*@
        <th @if (User.IsInRole("Admin")) {@Html.Raw("colspan=\"2\"")}>Filters</th>
        <th colspan="5">&nbsp;</th>
        <th style="white-space:nowrap;">
        @using (Html.BeginForm())
        { 
            @Html.HiddenFor(model => model.sortOrder)
            @Html.HiddenFor(model => model.includeFinal)
            @Html.HiddenFor(model => model.caseStatusID)
            @Html.HiddenFor(model => model.childNameContains)
            @Html.DropDownListForWithSubmit(model => model.caOrderTypeID, (SelectList)Model.OrderTypeList, "All types", "-1")
        } 
        </th>
        <th style="white-space:nowrap;">
        @using (Html.BeginForm())
        {     
            @Html.HiddenFor(model => model.sortOrder)
            @Html.HiddenFor(model => model.includeFinal)
            @Html.HiddenFor(model => model.caseStatusID)
            @Html.HiddenFor(model => model.caOrderTypeID)
            @Html.TextBox("childNameContains", null, new { @style = "width: 7em;", AccessKey = "F" })
            <input alt="Filter Child name" type="image" value="Search" src="@Url.Content("~/Images/view.png") "/>
        }
        </th>
        <th colspan="2">&nbsp;</th>
        <th style="white-space:nowrap;">
            @using (Html.BeginForm())
            { 
                @Html.HiddenFor(model => model.sortOrder)
                @Html.HiddenFor(model => model.includeFinal)
                @Html.HiddenFor(model => model.caOrderTypeID)
                @Html.HiddenFor(model => model.childNameContains)
                @Html.DropDownListForWithSubmit(model => model.caseStatusID, (SelectList)Model.StatusList, "All statuses", "-1")
            } 
        </th>
        <th colspan="4">&nbsp;</th>
    </tr>@* End Filter Row*@
    <tr> @* HeaderRow *@
        @if (User.IsInRole("Admin"))
        {<th style="width:20px;">&nbsp;</th>}
        @Html.SortHeader(Model, "uniqueid", "Unique record ID")
        @Html.SortHeader(Model, "reviewDate", "Next review date")
        @Html.SortHeader(Model, "sentSCD", "Date to SCD26")
        @Html.SortHeader(Model, "orderDated", "Date Order made")
        @Html.SortHeader(Model, "orderRecd", "Date Order received")
        @Html.SortHeader(Model, "officer", "Officer Dealing")
        @Html.SortHeader(Model, "orderType", "Order Type")
        @Html.SortHeader(Model, "eldestChild", "Surname of eldest child")
        @Html.SortHeader(Model, "respCount", "Respondents")
        @*@Html.SortHeader(Model, "created", "Created")*@ 
        @Html.SortHeader(Model, "protMark", "Protective Marking")
        @Html.SortHeader(Model, "caseStatus", "Current case status")
        @Html.SortHeader(Model, "result", "Result")
        @Html.SortHeader(Model, "resultEnter", "Result entered by")
        @if (User.IsInRole("Admin"))
        {<th style="width:20px;">&nbsp;</th>}
    </tr>@* End HeaderRow *@
@{var isAltRow = false;
  foreach (var item in Model.ChildAbductions)
  {
    <tr class="@(isAltRow ? "altRow" : "")">@* Data Row *@
        @if (User.IsInRole("Admin"))
        {
        <td>
            @Html.ImageLink(Url.Content("~/Images/Audit.png"), "Audit", "Audit", "Audit", new { area = "", auditType = "ChildAbduction", id = item.tipstaffRecordID }, null, null)
        </td>
        }
        <td>@Html.ImageAndTextLink(Url.Content("~/Images/view.png"), item.UniqueRecordID, string.Format("View {0}", item.UniqueRecordID), "Details", "ChildAbduction", new { id = item.tipstaffRecordID }, null, null, "createButton")</td>
        <td>
        @if (item.resultID == null)
        {
            <span class="@((item.nextReviewDate <= DateTime.Today) ? "alert" : "")">@Html.DisplayFor(modelItem => item.nextReviewDate)</span>
        }
        else
        {
            @:&nbsp;
        }
        </td> 
        <td>@Html.DisplayFor(modelItem => item.sentSCD26)</td>
        <td>@Html.DisplayFor(modelItem => item.orderDated)</td>
        <td>@Html.DisplayFor(modelItem => item.orderReceived)</td>
        <td>@Html.DisplayFor(modelItem => item.officerDealing)</td>
        <td>@Html.DisplayFor(modelItem => item.caOrderType.Detail)</td>
        <td>@if (item.children!=null || item.children.Count() > 0)
            { 
            @item.EldestChild
            }
        </td>
        <td>@item.Respondents.Count()</td>
        @*<td>@Html.DisplayFor(modelItem => item.createdBy) on @item.createdOn.ToShortDateString()</td>*@
        <td>@Html.DisplayFor(modelItem => item.protectiveMarking.Detail)</td>
        <td>@Html.DisplayFor(modelItem => item.caseStatus.Detail)</td> 
        @if (item.resultID == null)
        {      
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        }
        else
        {
        <td>@Html.DisplayFor(modelItem => item.result.Detail)</td>
        <td>@Html.DisplayFor(modelItem => item.resultEnteredBy) on @(((DateTime)item.resultDate).ToShortDateString())</td>
        }
        @if (User.IsInRole("Admin"))
        {
        <td>
            @Html.ImageLink(Url.Content("~/Images/Delete.png"),string.Format("Delete {0}",item.UniqueRecordID), "Delete", "ChildAbduction", new { id = item.tipstaffRecordID }, null, null)
        </td>
        }

    </tr>@* End Data Row *@
        isAltRow = !isAltRow;
  }
}
</table>
<div style="clear:both;float:left;display:block">

@using (Html.BeginForm())
{ 
    @Html.SSGPaging("Index", "Children", Model, Model.ChildAbductions)
} 
</div>
