@model Tipstaff.Models.AddressCreationModel

@{
    ViewBag.Title = string.Format("Create address for {0}", Model.tipstaffRecord.UniqueRecordID);
}

@{
    string controller = genericFunctions.TypeOfTipstaffRecord(Model.tipstaffRecordID);
    string display = controller == "Warrant" ? "Warrants" : "Child Abductions";
    string nameType = controller == "Warrant" ? "Contemnor" : "Respondent";
    }
    <h1>@ViewBag.Title</h1>
<h6>@Html.ActionLink(display,"Index",controller)
> @Html.ActionLink(Model.tipstaffRecord.UniqueRecordID,"Details",controller, new{id=Model.tipstaffRecordID},null) 
> Addresses > Add address</h6>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
<fieldset>
    <legend>Address details</legend>

    @Html.HiddenFor(model => model.tipstaffRecordID)

    <div class="editor-label">
        @Html.LabelFor(model => model.address.addresseeName, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.addresseeName)
        @Html.ValidationMessageFor(model => model.address.addresseeName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.addressLine1, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.addressLine1)
        @Html.ValidationMessageFor(model => model.address.addressLine1)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.addressLine2, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.addressLine2)
        @Html.ValidationMessageFor(model => model.address.addressLine2)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.addressLine3, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.addressLine3)
        @Html.ValidationMessageFor(model => model.address.addressLine3)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.town, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.town)
        @Html.ValidationMessageFor(model => model.address.town)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.county, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.county)
        @Html.ValidationMessageFor(model => model.address.county)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.postcode, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.postcode)
        @Html.ValidationMessageFor(model => model.address.postcode)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.phone, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.phone)
        @Html.ValidationMessageFor(model => model.address.phone)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.email, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.email)
        @Html.ValidationMessageFor(model => model.address.email)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.address.secondaryPhone, true)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.address.secondaryPhone)
        @Html.ValidationMessageFor(model => model.address.secondaryPhone)
    </div>

    <p>
        <input type="submit" value="Save" />
    </p>
    <div>Fields marked<span class="required-star">*</span> are mandatory and must be completed before the record can be saved.</div>
</fieldset>
}
