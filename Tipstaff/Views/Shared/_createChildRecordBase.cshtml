@model Tipstaff.Models.ChildCreationModel

    @Html.ValidationSummary(true) 
    <fieldset>
        <legend>Child details</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.nameLast, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model=>model.child.nameLast) 
            @Html.ValidationMessageFor(model => model.child.nameLast) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.nameFirst, true)
        </div>
        <div class="editor-field" >
            @Html.TextBoxFor(model=>model.child.nameFirst) 
            @Html.ValidationMessageFor(model => model.child.nameFirst) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.nameMiddle, true)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model=>model.child.nameMiddle) 
            @Html.ValidationMessageFor(model => model.child.nameMiddle) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.dateOfBirth, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.dateOfBirth) 
            @Html.ValidationMessageFor(model => model.child.dateOfBirth) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.gender, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.child.gender.GenderId, Model.GenderList, "Please select a gender", new { @class = "required" })           
            @Html.ValidationMessageFor(model => model.child.gender.GenderId) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.child.height, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.height) 
            @Html.ValidationMessageFor(model => model.child.height) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.build, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.build) 
            @Html.ValidationMessageFor(model => model.child.build) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.hairColour, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.hairColour) 
            @Html.ValidationMessageFor(model => model.child.hairColour) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.eyeColour, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.eyeColour) 
            @Html.ValidationMessageFor(model => model.child.eyeColour) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.skinColour, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.child.skinColour.SkinColourId, Model.SkinColourList, "Please select a skin colour", new { @class = "required" })           
            @Html.ValidationMessageFor(model => model.child.gender.GenderId) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.specialfeatures, true)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.child.specialfeatures) 
            @Html.ValidationMessageFor(model => model.child.specialfeatures) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.child.country, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.child.country.CountryID, Model.CountryList, "Select a country", new { @class = "required" })            
            @Html.ValidationMessageFor(model => model.child.country.CountryID) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.child.nationality, true)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.child.nationality.NationalityID, Model.NationalityList, "Select a Nationality", new { @class = "required" })            
            @Html.ValidationMessageFor(model => model.child.nationality.NationalityID) 
        </div>            
        
        @Html.HiddenFor(model => model.child.tipstaffRecordID, new { @Value = Model.tipstaffRecordID })
        @Html.HiddenFor(model => model.tipstaffRecordID) 
        @Html.HiddenFor(model => model.initial) 
        <p>
        @if (Model.initial)
        { 
            <input type="submit" name="submitButton" value="Save and add new Child" />
            <input type="submit" name="submitButton" value="Save,add new Respondent" />
        }
        else
        { 
            <input type="submit" value="Create" />
        }
        </p>
        <div style="clear:both;">Fields marked<span class="required-star">*</span> are mandatory and must be completed before the record can be saved.</div>
    </fieldset>