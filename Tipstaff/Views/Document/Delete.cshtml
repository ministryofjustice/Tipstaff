@model Tipstaff.Models.DeleteDocument

@{
    ViewBag.Title = string.Format("Delete document {0}", Model.Document.documentReference);
}

@{
    string controller = genericFunctions.TypeOfTipstaffRecord(Model.Document.tipstaffRecordID);
    string display = controller == "Warrant" ? "Warrants" : "Child Abductions";
    string nameType = controller == "Warrant" ? "Contemnor" : "Respondent";
    }
<h6>@Html.ActionLink(display,"Index",controller)
> @Html.ActionLink(Model.Document.tipstaffRecord.UniqueRecordID,"Details",controller, new{id=Model.Document.tipstaffRecordID},null) 
> Documents > Delete</h6>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
<fieldset>
    <legend>Are you sure you want to delete this document?</legend>
    @Html.HiddenFor(model => model.DeleteModelID)
    @Html.HiddenFor(model => model.Document.documentID)
    <div class="display-label">Document Reference</div>
    <div class="display-field">
        @Html.DisplayFor(modelItem => modelItem.Document.documentType.Detail) 
        @if (Model.Document.documentTypeID > 1 && Model.Document.fileName != null)
        {
        @Html.Raw("&nbsp; &ndash; &nbsp;") @Html.DisplayFor(modelItem => modelItem.Document.fileName)
        }
        else
        {
        @Html.DisplayFor(modelItem => modelItem.Document.documentReference) 
        }
    </div>
    <div class="display-label">CreationData</div>
    <div class="display-field">
        @Html.DisplayFor(model => Model.Document.CreationData)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => Model.DeletedReasonID,true)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.DeletedReasonID, Model.DeletedReasons, "Please select a reason for deletion", new { @class = "required" })
        @Html.ValidationMessageFor(model => model.DeletedReasonID)
    </div>
</fieldset>
    <p>
        <input type="submit" value="Delete" />
    </p>
}
