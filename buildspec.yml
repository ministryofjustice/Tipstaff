version: 0.2

env:
  variables:
    PROJECT: Tipstaff
    DOTNET_FRAMEWORK: 4.6.1
    AWS_ACCOUNT_ID: 913862848426
    CONTAINER_NAME: tipstaff-task
phases:
  install:
    runtime-versions:
      dotnet: 4.6.1
      docker: latest
    commands:
      - echo Installing Python
      - Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.9.9/python-3.9.9-amd64.exe -OutFile "python-installer.exe"
      - Start-Process -FilePath "python-installer.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
      - Remove-Item "python-installer.exe"
      - echo Installing AWS CLI
      - "C:\Program Files\Python39\Scripts\pip.exe" install --upgrade --user awscli
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - Invoke-Expression -Command (aws ecr get-login --no-include-email --region $env:AWS_DEFAULT_REGION)
  build:
    commands:
      - nuget restore
      - echo Building the Docker image...
      - msbuild $env:PROJECT.sln /p:TargetFrameworkVersion=v$env:DOTNET_FRAMEWORK /p:Configuration=Release
      - docker build -t ${env:IMAGE_REPO_NAME}:${env:IMAGE_TAG} .
      - docker tag ${env:IMAGE_REPO_NAME}:${env:IMAGE_TAG} ${env:AWS_ACCOUNT_ID}.dkr.ecr.${env:AWS_DEFAULT_REGION}.amazonaws.com/${env:IMAGE_REPO_NAME}:${env:IMAGE_TAG}
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push ${env:AWS_ACCOUNT_ID}.dkr.ecr.${env:AWS_DEFAULT_REGION}.amazonaws.com/${env:IMAGE_REPO_NAME}:${env:IMAGE_TAG}
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' ${env:CONTAINER_NAME} ${env:AWS_ACCOUNT_ID}.dkr.ecr.${env:AWS_DEFAULT_REGION}.amazonaws.com/${env:IMAGE_REPO_NAME}:${env:IMAGE_TAG} > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
  name: BuildOutput
